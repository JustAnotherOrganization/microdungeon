// Code generated by protoc-gen-go. DO NOT EDIT.
// source: character.proto

package microdungeon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Character_Gender int32

const (
	Character_NEUTER Character_Gender = 0
	Character_MALE   Character_Gender = 1
	Character_FEMALE Character_Gender = 2
)

var Character_Gender_name = map[int32]string{
	0: "NEUTER",
	1: "MALE",
	2: "FEMALE",
}
var Character_Gender_value = map[string]int32{
	"NEUTER": 0,
	"MALE":   1,
	"FEMALE": 2,
}

func (x Character_Gender) String() string {
	return proto.EnumName(Character_Gender_name, int32(x))
}
func (Character_Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

// Character is a playable D&D character.
type Character struct {
	Name       string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerName string           `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	Gender     Character_Gender `protobuf:"varint,3,opt,name=gender,enum=microdungeon.Character_Gender" json:"gender,omitempty"`
	Race       *Race            `protobuf:"bytes,4,opt,name=race" json:"race,omitempty"`
	// Class class = 5;
	Level      uint32     `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	Alignment  *Alignment `protobuf:"bytes,7,opt,name=alignment" json:"alignment,omitempty"`
	Experience uint32     `protobuf:"varint,8,opt,name=experience" json:"experience,omitempty"`
	Score      *Score     `protobuf:"bytes,9,opt,name=score" json:"score,omitempty"`
	Wielding   *Weapon    `protobuf:"bytes,100,opt,name=wielding" json:"wielding,omitempty"`
	Armour     []*Armour  `protobuf:"bytes,101,rep,name=armour" json:"armour,omitempty"`
}

func (m *Character) Reset()                    { *m = Character{} }
func (m *Character) String() string            { return proto.CompactTextString(m) }
func (*Character) ProtoMessage()               {}
func (*Character) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Character) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Character) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *Character) GetGender() Character_Gender {
	if m != nil {
		return m.Gender
	}
	return Character_NEUTER
}

func (m *Character) GetRace() *Race {
	if m != nil {
		return m.Race
	}
	return nil
}

func (m *Character) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Character) GetAlignment() *Alignment {
	if m != nil {
		return m.Alignment
	}
	return nil
}

func (m *Character) GetExperience() uint32 {
	if m != nil {
		return m.Experience
	}
	return 0
}

func (m *Character) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *Character) GetWielding() *Weapon {
	if m != nil {
		return m.Wielding
	}
	return nil
}

func (m *Character) GetArmour() []*Armour {
	if m != nil {
		return m.Armour
	}
	return nil
}

func init() {
	proto.RegisterType((*Character)(nil), "microdungeon.Character")
	proto.RegisterEnum("microdungeon.Character_Gender", Character_Gender_name, Character_Gender_value)
}

func init() { proto.RegisterFile("character.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0xc1, 0x4f, 0xea, 0x40,
	0x10, 0xc6, 0x5f, 0xa1, 0xf4, 0xd1, 0x81, 0x07, 0x64, 0x1f, 0x89, 0x1b, 0x0e, 0xd8, 0x70, 0x30,
	0xd5, 0x98, 0xc6, 0x60, 0xf4, 0x8e, 0xa6, 0x7a, 0x51, 0x0e, 0xab, 0xc6, 0xc4, 0x0b, 0x59, 0xda,
	0x49, 0x6d, 0xd2, 0x6e, 0x9b, 0xa5, 0x88, 0xfc, 0x7f, 0xfe, 0x61, 0xa6, 0xbb, 0x05, 0x69, 0xbc,
	0xcd, 0x7c, 0xdf, 0xaf, 0x5f, 0xa7, 0x33, 0x85, 0x7e, 0xf0, 0xce, 0x25, 0x0f, 0x0a, 0x94, 0x5e,
	0x2e, 0xb3, 0x22, 0x23, 0xdd, 0x34, 0x0e, 0x64, 0x16, 0xae, 0x45, 0x84, 0x99, 0x18, 0x0d, 0xf9,
	0x32, 0x4e, 0xe2, 0x62, 0xbb, 0x58, 0x05, 0x99, 0xc4, 0x95, 0x66, 0x46, 0x7d, 0x9e, 0xc4, 0x91,
	0x48, 0x51, 0x14, 0x95, 0xd0, 0xe5, 0x32, 0xcd, 0xd6, 0x55, 0xc4, 0x08, 0x24, 0x0f, 0x70, 0xe7,
	0x6c, 0x90, 0xe7, 0x99, 0xd0, 0xdd, 0xe4, 0xab, 0x09, 0xf6, 0xed, 0xee, 0x85, 0x84, 0x80, 0x29,
	0x78, 0x8a, 0xd4, 0x70, 0x0c, 0xd7, 0x66, 0xaa, 0x26, 0xc7, 0xd0, 0xc9, 0x13, 0xbe, 0x45, 0xb9,
	0x50, 0x56, 0x43, 0x59, 0xa0, 0xa5, 0x79, 0x09, 0x5c, 0x83, 0x15, 0xa1, 0x08, 0x51, 0xd2, 0xa6,
	0x63, 0xb8, 0xbd, 0xe9, 0xd8, 0x3b, 0x1c, 0xd8, 0xdb, 0xa7, 0x7b, 0xf7, 0x8a, 0x62, 0x15, 0x4d,
	0x4e, 0xc0, 0x2c, 0xc7, 0xa2, 0xa6, 0x63, 0xb8, 0x9d, 0x29, 0xa9, 0x3f, 0xc5, 0x78, 0x80, 0x4c,
	0xf9, 0x64, 0x08, 0xad, 0x04, 0x3f, 0x30, 0xa1, 0x96, 0x63, 0xb8, 0xff, 0x98, 0x6e, 0xc8, 0x15,
	0xd8, 0xfb, 0x6f, 0xa6, 0x7f, 0x55, 0xc4, 0x51, 0x3d, 0x62, 0xb6, 0xb3, 0xd9, 0x0f, 0x49, 0xc6,
	0x00, 0xf8, 0x99, 0xa3, 0x8c, 0x51, 0x04, 0x48, 0xdb, 0x2a, 0xf1, 0x40, 0x21, 0xa7, 0xd0, 0x52,
	0x8b, 0xa5, 0xb6, 0x8a, 0xfc, 0x5f, 0x8f, 0x7c, 0x2a, 0x2d, 0xa6, 0x09, 0x72, 0x01, 0xed, 0x4d,
	0x8c, 0x49, 0x18, 0x8b, 0x88, 0x86, 0x8a, 0x1e, 0xd6, 0xe9, 0x57, 0xb5, 0x68, 0xb6, 0xa7, 0xc8,
	0x39, 0x58, 0xfa, 0x2c, 0x14, 0x9d, 0xe6, 0x6f, 0x7e, 0xa6, 0x3c, 0x56, 0x31, 0x93, 0x33, 0xb0,
	0xf4, 0xc6, 0x08, 0x80, 0x35, 0xf7, 0x5f, 0x9e, 0x7d, 0x36, 0xf8, 0x43, 0xda, 0x60, 0x3e, 0xce,
	0x1e, 0xfc, 0x81, 0x51, 0xaa, 0x77, 0xbe, 0xaa, 0x1b, 0x37, 0xbd, 0xb7, 0xda, 0x5f, 0xb2, 0xb4,
	0xd4, 0x75, 0x2f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x68, 0xbe, 0xf8, 0xb5, 0x4d, 0x02, 0x00,
	0x00,
}
