// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: armour.proto

package microdungeon

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Armour_Type int32

const (
	Armour_UNKNOWN  Armour_Type = 0
	Armour_HEADGEAR Armour_Type = 1
	Armour_MAIN     Armour_Type = 2
	Armour_GLOVES   Armour_Type = 3
	Armour_BOOTS    Armour_Type = 4
	Armour_RING     Armour_Type = 5
	Armour_BELT     Armour_Type = 6
	Armour_CLOAK    Armour_Type = 7
	Armour_SHIELD   Armour_Type = 8
	Armour_GLASSES  Armour_Type = 9
)

var Armour_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "HEADGEAR",
	2: "MAIN",
	3: "GLOVES",
	4: "BOOTS",
	5: "RING",
	6: "BELT",
	7: "CLOAK",
	8: "SHIELD",
	9: "GLASSES",
}
var Armour_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"HEADGEAR": 1,
	"MAIN":     2,
	"GLOVES":   3,
	"BOOTS":    4,
	"RING":     5,
	"BELT":     6,
	"CLOAK":    7,
	"SHIELD":   8,
	"GLASSES":  9,
}

func (x Armour_Type) String() string {
	return proto.EnumName(Armour_Type_name, int32(x))
}
func (Armour_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_armour_649b91afd0e7d234, []int{0, 0}
}

// Armour is the basis for all armour.
type Armour struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Aliases              []string    `protobuf:"bytes,2,rep,name=aliases" json:"aliases,omitempty"`
	Description          string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	WeightClass          WeightClass `protobuf:"varint,4,opt,name=weight_class,json=weightClass,proto3,enum=microdungeon.WeightClass" json:"weight_class,omitempty"`
	Type                 Armour_Type `protobuf:"varint,5,opt,name=type,proto3,enum=microdungeon.Armour_Type" json:"type,omitempty"`
	Ac                   *Calculator `protobuf:"bytes,6,opt,name=ac" json:"ac,omitempty"`
	Modifiers            []*Modifier `protobuf:"bytes,7,rep,name=modifiers" json:"modifiers,omitempty"`
	StealthAdvantage     bool        `protobuf:"varint,8,opt,name=stealth_advantage,json=stealthAdvantage,proto3" json:"stealth_advantage,omitempty"`
	Weight               uint32      `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Worn                 bool        `protobuf:"varint,100,opt,name=worn,proto3" json:"worn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Armour) Reset()         { *m = Armour{} }
func (m *Armour) String() string { return proto.CompactTextString(m) }
func (*Armour) ProtoMessage()    {}
func (*Armour) Descriptor() ([]byte, []int) {
	return fileDescriptor_armour_649b91afd0e7d234, []int{0}
}
func (m *Armour) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Armour.Unmarshal(m, b)
}
func (m *Armour) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Armour.Marshal(b, m, deterministic)
}
func (dst *Armour) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Armour.Merge(dst, src)
}
func (m *Armour) XXX_Size() int {
	return xxx_messageInfo_Armour.Size(m)
}
func (m *Armour) XXX_DiscardUnknown() {
	xxx_messageInfo_Armour.DiscardUnknown(m)
}

var xxx_messageInfo_Armour proto.InternalMessageInfo

func (m *Armour) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Armour) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *Armour) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Armour) GetWeightClass() WeightClass {
	if m != nil {
		return m.WeightClass
	}
	return WeightClass_UNKNOWN_WEIGHT_CLASS
}

func (m *Armour) GetType() Armour_Type {
	if m != nil {
		return m.Type
	}
	return Armour_UNKNOWN
}

func (m *Armour) GetAc() *Calculator {
	if m != nil {
		return m.Ac
	}
	return nil
}

func (m *Armour) GetModifiers() []*Modifier {
	if m != nil {
		return m.Modifiers
	}
	return nil
}

func (m *Armour) GetStealthAdvantage() bool {
	if m != nil {
		return m.StealthAdvantage
	}
	return false
}

func (m *Armour) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Armour) GetWorn() bool {
	if m != nil {
		return m.Worn
	}
	return false
}

func init() {
	proto.RegisterType((*Armour)(nil), "microdungeon.Armour")
	proto.RegisterEnum("microdungeon.Armour_Type", Armour_Type_name, Armour_Type_value)
}

func init() { proto.RegisterFile("armour.proto", fileDescriptor_armour_649b91afd0e7d234) }

var fileDescriptor_armour_649b91afd0e7d234 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6b, 0xdb, 0x30,
	0x14, 0xc6, 0xe7, 0xd8, 0x71, 0xec, 0xe7, 0xac, 0x68, 0x62, 0x14, 0xad, 0x27, 0xd3, 0x93, 0x61,
	0x2c, 0x87, 0x6c, 0xc7, 0x5d, 0x9c, 0xd4, 0xa4, 0xa1, 0xae, 0x0d, 0x72, 0xb6, 0xc2, 0x2e, 0x41,
	0xb5, 0xb5, 0xd4, 0xe0, 0x58, 0x41, 0x52, 0x16, 0xb2, 0x3f, 0x7d, 0xa7, 0x21, 0x27, 0xa1, 0x09,
	0xf4, 0xf6, 0xbe, 0xf7, 0x7e, 0x9f, 0xfd, 0x3d, 0xf1, 0x60, 0xc8, 0xe4, 0x5a, 0x6c, 0xe5, 0x68,
	0x23, 0x85, 0x16, 0x78, 0xb8, 0xae, 0x4b, 0x29, 0xaa, 0x6d, 0xbb, 0xe2, 0xa2, 0xbd, 0xf9, 0xc8,
	0x9e, 0xeb, 0xa6, 0xd6, 0xfb, 0xa5, 0x2a, 0x85, 0xe4, 0xea, 0xc0, 0xdc, 0x04, 0x7a, 0xbf, 0x39,
	0x89, 0xdb, 0x7f, 0x36, 0xb8, 0x71, 0xf7, 0x05, 0x8c, 0xc1, 0x69, 0xd9, 0x9a, 0x13, 0x2b, 0xb4,
	0x22, 0x9f, 0x76, 0x35, 0x26, 0x30, 0x60, 0x4d, 0xcd, 0x14, 0x57, 0xa4, 0x17, 0xda, 0x91, 0x4f,
	0x4f, 0x12, 0x87, 0x10, 0x54, 0x5c, 0x95, 0xb2, 0xde, 0xe8, 0x5a, 0xb4, 0xc4, 0xee, 0x4c, 0xe7,
	0x2d, 0xfc, 0x1d, 0x86, 0x3b, 0x5e, 0xaf, 0x5e, 0xf4, 0xb2, 0x6c, 0x98, 0x52, 0xc4, 0x09, 0xad,
	0xe8, 0x6a, 0xfc, 0x69, 0x74, 0x1e, 0x71, 0xf4, 0xd4, 0x11, 0x53, 0x03, 0xd0, 0x60, 0xf7, 0x2a,
	0xf0, 0x17, 0x70, 0x4c, 0x4e, 0xd2, 0x7f, 0xcb, 0x75, 0x48, 0x3c, 0x5a, 0xec, 0x37, 0x9c, 0x76,
	0x18, 0x8e, 0xa0, 0xc7, 0x4a, 0xe2, 0x86, 0x56, 0x14, 0x8c, 0xc9, 0x25, 0x3c, 0x65, 0x4d, 0xb9,
	0x6d, 0x98, 0x16, 0x92, 0xf6, 0x58, 0x89, 0xbf, 0x81, 0xbf, 0x16, 0x55, 0xfd, 0xbb, 0xe6, 0x52,
	0x91, 0x41, 0x68, 0x47, 0xc1, 0xf8, 0xfa, 0xd2, 0xf0, 0x78, 0x1c, 0xd3, 0x57, 0x10, 0x7f, 0x86,
	0x0f, 0x4a, 0x73, 0xd6, 0xe8, 0x97, 0x25, 0xab, 0xfe, 0xb0, 0x56, 0xb3, 0x15, 0x27, 0x5e, 0x68,
	0x45, 0x1e, 0x45, 0xc7, 0x41, 0x7c, 0xea, 0xe3, 0x6b, 0x70, 0x0f, 0xab, 0x10, 0x3f, 0xb4, 0xa2,
	0xf7, 0xf4, 0xa8, 0xcc, 0x0b, 0xef, 0x84, 0x6c, 0x49, 0xd5, 0xf9, 0xba, 0xfa, 0xf6, 0x2f, 0x38,
	0x66, 0x0d, 0x1c, 0xc0, 0xe0, 0x47, 0xf6, 0x90, 0xe5, 0x4f, 0x19, 0x7a, 0x87, 0x87, 0xe0, 0xdd,
	0x27, 0xf1, 0xdd, 0x2c, 0x89, 0x29, 0xb2, 0xb0, 0x07, 0xce, 0x63, 0x3c, 0xcf, 0x50, 0x0f, 0x03,
	0xb8, 0xb3, 0x34, 0xff, 0x99, 0x14, 0xc8, 0xc6, 0x3e, 0xf4, 0x27, 0x79, 0xbe, 0x28, 0x90, 0x63,
	0x00, 0x3a, 0xcf, 0x66, 0xa8, 0x6f, 0xaa, 0x49, 0x92, 0x2e, 0x90, 0x6b, 0xc6, 0xd3, 0x34, 0x8f,
	0x1f, 0xd0, 0xc0, 0xb8, 0x8a, 0xfb, 0x79, 0x92, 0xde, 0x21, 0xcf, 0xfc, 0x66, 0x96, 0xc6, 0x45,
	0x91, 0x14, 0xc8, 0x9f, 0x5c, 0xfd, 0xba, 0xb8, 0x97, 0x67, 0xb7, 0xbb, 0x89, 0xaf, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xa5, 0x3e, 0xa2, 0xc3, 0x54, 0x02, 0x00, 0x00,
}
